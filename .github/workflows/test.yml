name: Test and Publish to Expo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Adjusted based on optimized steps

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js with built-in npm caching
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      # Step 3: Install dependencies using npm ci
      - name: Install dependencies
        run: npm ci

      # Step 4: Run tests with coverage
      - name: Run tests with coverage
        run: |
          CI=true npm run test:ci

      # Step 5: Extract and display coverage summary
      - name: Display Coverage Summary
        run: |
          # Ensure jq is available
          if ! command -v jq &> /dev/null
          then
              sudo apt-get update
              sudo apt-get install -y jq
          fi

          # Extract coverage percentages
          LINES=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          FUNCTIONS=$(jq '.total.functions.pct' coverage/coverage-summary.json)
          BRANCHES=$(jq '.total.branches.pct' coverage/coverage-summary.json)
          STATEMENTS=$(jq '.total.statements.pct' coverage/coverage-summary.json)

          # Append to GitHub Actions summary
          echo "## ðŸ§ª Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric      | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lines       | ${LINES}%   |" >> $GITHUB_STEP_SUMMARY
          echo "| Functions   | ${FUNCTIONS}% |" >> $GITHUB_STEP_SUMMARY
          echo "| Branches    | ${BRANCHES}%  |" >> $GITHUB_STEP_SUMMARY
          echo "| Statements  | ${STATEMENTS}% |" >> $GITHUB_STEP_SUMMARY

      


      

      








